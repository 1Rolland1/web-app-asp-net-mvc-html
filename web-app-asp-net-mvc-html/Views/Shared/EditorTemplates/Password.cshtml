@{ string cls = ViewData.ModelMetadata.IsRequired ? ("required" + (!string.IsNullOrEmpty(Convert.ToString(ViewData.TemplateInfo.FormattedModelValue)) ? " valid" : "")) : "";
    Dictionary<string, object> attributes = new Dictionary<string, object>();
    attributes["class"] = cls;

    var validators = ModelValidatorProviders.Providers.GetValidators(ViewData.ModelMetadata, ViewContext);
    ModelClientValidationRule rule = validators.SelectMany(v => v.GetClientValidationRules()).FirstOrDefault(m => m.ValidationType == "stringLength");
    if (rule != null && rule.ValidationParameters.ContainsKey("maximumLength"))
    {
        attributes["maxlength"] = rule.ValidationParameters["maximumLength"];
    }
}
@Html.Password("", null, attributes)